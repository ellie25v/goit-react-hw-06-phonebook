{"version":3,"sources":["components/contacts/contactItem/contactItem.module.css","components/filter/filter.module.css","components/alert/alert.module.css","components/animation/itemTransition.module.css","components/app.module.css","components/animation/logo.module.css","components/animation/filterTransition.module.css","components/animation/alertTransition.module.css","redux/types.js","redux/actions.js","redux/reducers.js","redux/store.js","components/phonebook/Phonebook.js","components/contacts/contactItem/ContactItem.js","components/contacts/Contacts.js","components/filter/Filter.js","components/alert/Alert.js","components/App.js","index.js","components/phonebook/phonebook.module.css"],"names":["module","exports","addContact","createAction","types","deleteContact","filterContact","rootReducer","createReducer","contacts","filter","state","payload","contact","id","persistConfig","key","storage","whitelist","blacklist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","PERSIST","persistor","persistStore","Phonebook","name","number","handleChangeValue","event","setState","target","value","handleSubmitForm","preventDefault","props","onGetValue","uuidv4","className","styles","form","onSubmit","this","span","input","onChange","type","placeholder","required","addBtn","Component","ContactItem","li","p","delete","onClick","Contacts","console","log","TransitionGroup","component","map","CSSTransition","timeout","classNames","itemTransition","unmountOnExit","Filter","filterP","filterInput","Alert","alert","alertP","App","showLogo","alertOn","getValue","some","toLowerCase","setTimeout","e","getFilteredContacts","includes","localStorage","getItem","JSON","parse","setItem","stringify","in","logo","length","filterTransition","alertTransition","mapDTP","connect","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.293e3ee1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"contactItem_li__1xRQp\",\"p\":\"contactItem_p__20Lgx\",\"delete\":\"contactItem_delete__3XNL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"filter_filter__169PX\",\"filterP\":\"filter_filterP__33Rdk\",\"filterInput\":\"filter_filterInput__3up4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__31now\",\"alertP\":\"alert_alertP__2NVru\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"itemTransition_enter__3OrW2\",\"enterActive\":\"itemTransition_enterActive__3G4dq\",\"exit\":\"itemTransition_exit__6bBpS\",\"exitActive\":\"itemTransition_exitActive__jaZ0Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"app_logo__30M8I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logo_enter__36L0H\",\"enterActive\":\"logo_enterActive__33Cs3\",\"exit\":\"logo_exit__3vGUI\",\"exitActive\":\"logo_exitActive__1bTxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filterTransition_enter__1xGV_\",\"enterActive\":\"filterTransition_enterActive__2CpUw\",\"exit\":\"filterTransition_exit__1qeEE\",\"exitActive\":\"filterTransition_exitActive__3nIv3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alertTransition_enter__3SZe7\",\"enterActive\":\"alertTransition_enterActive__2gvel\",\"exit\":\"alertTransition_exit__1wrHQ\",\"exitActive\":\"alertTransition_exitActive__2oQZc\"};","export default {\n    ADD_CONTACT: 'ADD_CONTACT',\n    DELETE_CONTACT: 'DELETE_CONTACT',\n    FILTER_CONTACT: 'FILTER_CONTACT'\n}","import { createAction } from '@reduxjs/toolkit';\nimport types from './types'\n\nexport const addContact = createAction(types.ADD_CONTACT);\nexport const deleteContact = createAction(types.DELETE_CONTACT);\nexport const filterContact = createAction(types.FILTER_CONTACT);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './actions'\n\nconst innitialState = {\n    contacts: [],\n    filter: ''\n}\n\nconst rootReducer = createReducer(innitialState, {\n    [addContact]: (state, { payload }) => { return { ...state, contacts: [ ...state.contacts, payload] } },\n\n    [deleteContact]: (state, { payload }) => { return { ...state, contacts: [ ...state.contacts.filter(contact => contact.id !== payload.id)] } },\n\n    [filterContact]: (state, { payload }) => { return { ...state, filter: payload } }\n})\n\nexport default rootReducer;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport  rootReducer  from \"./reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; \nimport { PERSIST } from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  whitelist: [\"contacts\"],\n  blacklist: [\"_persist\"]\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [PERSIST]\n    }\n  })\n}); \nexport const persistor = persistStore(store); \n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './phonebook.module.css'\n\nclass Phonebook extends Component {\n    state = { \n        name: \"\",\n        number: \"\"\n     }\n\n     handleChangeValue = event => {\n        this.setState({\n          [event.target.name]: event.target.value\n        });\n      };\n     \n\n\n      handleSubmitForm = event => {\n        event.preventDefault();\n        this.setState({\n            name: \"\",\n            number: \"\"\n        });\n        this.props.onGetValue({\n            id: uuidv4(),\n            name: this.state.name,\n            number: this.state.number});\n       \n      }\n\n\n    render() {\n        return (\n            \n            <form className={styles.form} onSubmit={this.handleSubmitForm}>\n                <span className={styles.span}>Name </span>\n                <input className={styles.input} onChange={this.handleChangeValue}\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                placeholder=\"Name\"\n                required/>\n                <br/>\n\n                <span className={styles.span}>Number </span>\n                <input className={styles.input} onChange={this.handleChangeValue}\n                type=\"tel\" \n                value={this.state.number} \n                name=\"number\" \n                placeholder=\"Number\"\n                required/>\n                <br/>\n\n                <button className={styles.addBtn} type=\"submit\">Add Contact</button>\n            </form>\n            \n        );\n    }\n}\n\nexport default Phonebook;","import React from 'react'\nimport styles from './contactItem.module.css'\n\nconst ContactItem = ({ contact: { name, number, id }, deleteContact }) => (\n  \n    <li className={styles.li} >\n      <p className={styles.p}>{name}</p>\n      <p className={styles.p} >{number}</p>\n      <button className={styles.delete} onClick={() => deleteContact(id)} type=\"button\" id={id}>\n        x\n      </button>\n    </li>\n\n)\nexport default ContactItem;","import React from 'react'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactItem from './contactItem/ContactItem'\nimport itemTransition from '../animation/itemTransition.module.css'\n\nconst Contacts = ({ contacts, deleteContact }) => (\n  <>\n  {console.log('contacts', contacts)}\n    <TransitionGroup component=\"ul\">\n      {contacts.map(contact => (\n        <CSSTransition key={contact.id} timeout={1000} classNames={itemTransition} unmountOnExit>\n          <ContactItem contact={contact} deleteContact={deleteContact} id={contact.id}/>\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  </>\n);\n\nexport default Contacts;","import React from 'react';\nimport styles from './filter.module.css'\n\nconst Filter = ({filter, filterContact}) => (\n    <div className={styles.filter}>\n    <p className={styles.filterP}>Find contact by name</p>\n    <input className={styles.filterInput} onChange={filterContact}\n    type=\"text\"\n    name=\"filter\"/>\n    </div>\n);\n\nexport default Filter;","import React from 'react'\nimport styles from './alert.module.css'\n\nconst Alert = () => (\n    <div className={styles.alert}>\n        <p className={styles.alertP}>This contact already exist!</p>\n    </div>\n);\n\nexport default Alert;","import React, {Component} from 'react';\nimport Phonebook from './phonebook/Phonebook';\nimport Contacts from './contacts/Contacts'\nimport Filter from './filter/Filter'\nimport Alert from './alert/Alert'\nimport { connect } from \"react-redux\";\nimport { addContact, deleteContact, filterContact } from '../redux/actions'\nimport { CSSTransition } from 'react-transition-group';\nimport styles from './app.module.css'\nimport logo from './animation/logo.module.css'\nimport filterTransition from './animation/filterTransition.module.css'\nimport alertTransition from './animation/alertTransition.module.css'\n\nclass App extends Component {\n  state = { \n      contacts: [],\n      filter: '',\n      showLogo: false,\n      alertOn: false\n  }\n\n  getValue = value => {\n    console.log('this.props', this.props.contacts)\n    console.log('value', value.name)\n    const isNameTaken = this.props.contacts.some(contact => contact.name === value.name.toLowerCase())\n    !isNameTaken ? \n    (this.props.addContact(value))\n    // this.setState(prev => ({\n    //   contacts: [value, ...prev.contacts]\n    : (this.setState({ alertOn: true }));\n  \n\n    setTimeout(() => {\n      this.setState({ alertOn: false });\n    }, 2000);\n  };\n\n  filterContact = e => {\n    this.props.filterContact(e.target.value)\n    };\n\n\n  componentDidMount(){\n    const contacts = (localStorage.getItem('contacts') !== null) ? JSON.parse(localStorage.getItem('contacts')) : [];\n    this.setState({contacts, showLogo: true})\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n\n  getFilteredContacts = (contacts) => {\n    const { filter } = this.props;\n    if (!filter) {\n        return contacts;\n    } else {\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    }\n};\n  \n  // getFilteredContacts = () => {\n  //   return this.state.contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(this.state.filter)\n  //   );\n  // };\n   deleteContact = (id) =>{\n      this.props.deleteContact({ id })\n   }\n  // deleteContact = e => {\n  //   const id = e.target.id;\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== id)\n  //   }));\n  // };\n\n  render() {\n    console.log('this.props render', this.props)\n    const { filter, contacts } = this.props;\n    console.log('filter', filter)\n    return (\n      <div>\n        <CSSTransition \n          in={this.state.showLogo}\n          timeout={1000}\n          classNames={logo}>\n           <h2 className={styles.logo}>Phonebook</h2>\n        </CSSTransition>\n\n        <Phonebook {...this.state} onGetValue={this.getValue}/>\n      \n        {(contacts.length > 2) && (\n          <CSSTransition\n              timeout={500} \n              classNames={filterTransition}> \n              <Filter filter={filter} filterContact={this.filterContact} />\n          </CSSTransition>)\n        }\n\n          <CSSTransition \n            in={this.state.alertOn}\n            timeout={1000} \n            classNames={alertTransition}\n            unmountOnExit>\n            <Alert />\n          </CSSTransition>\n      \n        {contacts && <Contacts \n        contacts={this.getFilteredContacts(contacts)}\n        deleteContact={this.deleteContact}/>}\n      </div>\n    );\n  }\n}\n\n\nconst mapDTP = {\n    addContact,\n    deleteContact,\n    filterContact\n}\nconst mapSTP = state => ({\n  contacts: state.contacts,\n  filter: state.filter\n});\n\nexport default connect(mapSTP,  mapDTP)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport App from './components/App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>, document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"phonebook_form__35hek\",\"span\":\"phonebook_span__XdkU2\",\"input\":\"phonebook_input__1fNnr\",\"addBtn\":\"phonebook_addBtn__2Q2cp\"};"],"sourceRoot":""}